//
// Created by SomeDude on 24.07.2019.
//

#ifndef CMQTTSNFORWARDER_TEST_MQTTSNCLIENT_MQTTSNCLIENTACTIONTYPE_H_
#define CMQTTSNFORWARDER_TEST_MQTTSNCLIENT_MQTTSNCLIENTACTIONTYPE_H_
#include <iostream>
enum class MqttSnClientActionType {
  CONNECT,
  AUTO_CONNECT,
  ADVERTISE_CONNECT,
  SEARCHGW_CONNECT,
  DIRECT_CONNECT,
  DISCONNECT,
  REGISTER,
  SUBSCRIBE,
  PREDEFINED_SUBSCRIBE,
  TOPICID_SUBSCRIBE,
  TOPICNAME_SUBSCRIBE,
  UNSUBSCRIBE,
  PUBLISH,
  UNCONNECTED_PREDEFINED_PUBLISH_QOSM1,
  PREDEFINED_PUBLISH_QOSM1,
  PREDEFINED_PUBLISH_QOS0,
  PREDEFINED_PUBLISH_QOS1,
  PREDEFINED_PUBLISH_QOS2,
  TOPICNAME_PUBLISH_QOSM1,
  TOPICNAME_PUBLISH_QOS0,
  TOPICNAME_PUBLISH_QOS1,
  TOPICNAME_PUBLISH_QOS2,
  TOPICID_PUBLISH_QOSM1,
  TOPICID_PUBLISH_QOS0,
  TOPICID_PUBLISH_QOS1,
  TOPICID_PUBLISH_QOS2,
  PUBLISH_RECEIVE_PUBLISH,
  PUBLISH_RECEIVE_PUBLISH_PREDEFINED_PUBLISH_QOSM1,
  PUBLISH_RECEIVE_PUBLISH_PREDEFINED_PUBLISH_QOS0,
  PUBLISH_RECEIVE_PUBLISH_PREDEFINED_PUBLISH_QOS1,
  PUBLISH_RECEIVE_PUBLISH_PREDEFINED_PUBLISH_QOS2,
  PUBLISH_RECEIVE_PUBLISH_TOPICNAME_PUBLISH_QOSM1,
  PUBLISH_RECEIVE_PUBLISH_TOPICNAME_PUBLISH_QOS0,
  PUBLISH_RECEIVE_PUBLISH_TOPICNAME_PUBLISH_QOS1,
  PUBLISH_RECEIVE_PUBLISH_TOPICNAME_PUBLISH_QOS2,
  PUBLISH_RECEIVE_PUBLISH_TOPICID_PUBLISH_QOSM1,
  PUBLISH_RECEIVE_PUBLISH_TOPICID_PUBLISH_QOS0,
  PUBLISH_RECEIVE_PUBLISH_TOPICID_PUBLISH_QOS1,
  PUBLISH_RECEIVE_PUBLISH_TOPICID_PUBLISH_QOS2,
  SLEEP,
  WAKEUP,
  RECONNECT,
  PING,
  // FEATURE WILLTOPICUPD,
  // FEATURE WILLMSGUPD,
  DELAY,
  UNKNOWNACTION,
};
std::ostream &operator<<(std::ostream &os, const MqttSnClientActionType &obj);
#endif  // CMQTTSNFORWARDER_TEST_MQTTSNCLIENT_MQTTSNCLIENTACTIONTYPE_H_
